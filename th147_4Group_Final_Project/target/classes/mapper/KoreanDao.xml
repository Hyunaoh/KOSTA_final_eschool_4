<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace="dao.NoticeDao 인터페이스 동일 경로 구현된되는 ID 값들을 인터페이스 함수명과 동일 -->
<mapper namespace="sqlSession">

	<!-- <select id="getKoreanCount" resultType="Integer">
		SELECT COUNT(*) CNT
		FROM KOREAN
		WHERE ${param1} LIKE '%${param2}%'
		${있는 그대로} , #{형변환} 차이점 param1 => AA ${param1} => AA (column 명 , Table 
			명 ) #{param1} => 'AA' param2 = > 88 ${param2} => 88 #{param2} => 88 oracle 
			: where ename like '%kim%' # => LIKE '%'kim'%' $ => LIKR '%kim%'
	</select> -->
	
<!-- 	<select id="getAllKorean" resultType="List">
		Notice getNotice(String seq) parameter 하나짜리는[ 변수이름 ] (param1 은 안되요)
		SELECT * FROM KOREAN WHERE KO_GD=#{koGrade}
	</select> -->
	
<!-- 	<select id="getAllKoreanCnt" resultType="int">
		Notice getNotice(String seq) parameter 하나짜리는[ 변수이름 ] (param1 은 안되요)
		SELECT count(*) FROM KOREAN 
	</select> -->
	
	<!-- 모든 데이터 받아오기 -->
	<select id="getAllKorean" resultType="com.kosta.th147_4group.vo.KoreanVO">
		<!-- getNotices(int page, String field, String query) int 
			srow = 1 + (page-1)*5; int erow = 5 + (page-1)*5; -->
		SELECT * FROM KOREAN 
	</select> 
	
	<!-- 특정 컬럼의 모든 데이터 받아오기 -->
	<select id="getKorean" parameterType="String" resultType="com.kosta.th147_4group.vo.KoreanVO">
		<!-- Notice getNotice(String seq) parameter 하나짜리는[ 변수이름 ] (param1 은 안되요) -->
		SELECT * FROM KOREAN WHERE koGrade=#{koGrade}
	</select>
	
	<!-- 특정 컬럼 삭제하기 -->
	<delete id="deleteKoreanByNum" parameterType="int" >
		DELETE KOREAN WHERE koRnum=#{koRnum}
	</delete> 
	
	<!-- 페이지 넘버 받아오기 -->
	<select id="getNowPage" parameterType="java.util.HashMap" resultType="com.kosta.th147_4group.vo.KoreanVO" >
		SELECT k.rownum as rownum, k.koRnum as koRnum, k.koGrade as koGrade, k.koClass as koClass, k.koMessage as koMessage,
        k.koDate as koDate, k.koName as koName, k.koCategoly as koCategoly, k.koBungi as koBungi 
		FROM
		(
		SELECT @rownum := @rownum + 1 AS rownum, KOREAN.*
		FROM
		KOREAN, (SELECT @rownum :=0) n
		ORDER BY rownum ASC
		) k
		WHERE k.rownum BETWEEN #{num1} AND #{num2} 
		ORDER BY rownum ASC
	</select>
	
<!-- 	<update id="update">
		int update(Notice notice) parameter 객체로 ..... Notice 객체 (만약에 setter 
			, getter 가 구현되어 있다면)
		UPDATE KOREAN SET TITLE=#{title}, CONTENT=#{content},
		FILESRC=#{fileSrc ,jdbcType=VARCHAR} WHERE SEQ=#{seq}
	</update> -->
	
<!-- 	<insert id="insert">
		int insert( Notice n ) INSERT INTO TNOTICES(SEQ, TITLE, CONTENT, WRITER, 
			REGDATE, HIT, FILESRC , FILESRC2) VALUES( (SELECT MAX(TO_NUMBER(SEQ))+1 FROM 
			TNOTICES), :title, :content, :writer, SYSDATE, 0, :fileSrc , :fileSrc2)
		INSERT INTO NOTICES VALUES( #{ko_gd}, #{ko_cl}, #{ko_ms}, #{ko_ymd}, #{ko_nm}, #{ko_ca}, #{ko_bun})
	</insert> -->

	<!-- 동적쿼리 .... 조별로 테스트 <select id="totalSearch" resultType="kr.co.MiOhRecipe.dto.RecipeDto"> 
		SELECT RECIPENO, CATEGORYNO, FOODNO, TITLE, USERID, CONTENT, REGDATE, RECIPEIMAGE, 
		HIT, GOOD, PRODUCTNO, VIDEONAME, RESTAURANTADDR FROM RECIPEBOARD <where> 
		<if test="param2 == 2"> categoryNo IN(2,3,4) </if> <if test="param2 == 3"> 
		categoryNo IN(5,6) </if> <if test="param2 == 4"> categoryNo IN(7,8) </if> 
		<if test="param1 != null"> and (title LIKE '%${param1}%' OR content LIKE 
		'%${param1}%') </if> </where> ORDER BY RECIPENO desc </select> -->
</mapper>
